import{_ as e}from"./chunks/image-20230521191642686.c1b11c26.js";import{_ as a,c as s,o as n,O as t}from"./chunks/framework.41379913.js";const C=JSON.parse('{"title":"","description":"","frontmatter":{"outline":[2,3]},"headers":[],"relativePath":"flutter/one.md"}'),l={name:"flutter/one.md"},r=t('<h2 id="创建flutter项目的方式" tabindex="-1">创建flutter项目的方式 <a class="header-anchor" href="#创建flutter项目的方式" aria-label="Permalink to &quot;创建flutter项目的方式&quot;">​</a></h2><h3 id="一、使用android-studio" tabindex="-1">一、使用Android studio <a class="header-anchor" href="#一、使用android-studio" aria-label="Permalink to &quot;一、使用Android studio&quot;">​</a></h3><h3 id="二、使用命令行" tabindex="-1">二、使用命令行 <a class="header-anchor" href="#二、使用命令行" aria-label="Permalink to &quot;二、使用命令行&quot;">​</a></h3><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">flutter</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">create</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">project</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">nam</span><span style="color:#A6ACCD;">e</span><span style="color:#89DDFF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="vscode中开发-运行flutter应用" tabindex="-1">Vscode中开发 运行Flutter应用 <a class="header-anchor" href="#vscode中开发-运行flutter应用" aria-label="Permalink to &quot;Vscode中开发 运行Flutter应用&quot;">​</a></h2><blockquote><p>如果你习惯用Android Studio的话可以直接用Android Studio直接开发Flutter。但是Android Studio比 较耗费电脑资源，所以这里我们推荐使用Vscode</p></blockquote><h3 id="vscode中安装flutter插件-dart插件。" tabindex="-1">Vscode中安装Flutter插件 Dart插件。 <a class="header-anchor" href="#vscode中安装flutter插件-dart插件。" aria-label="Permalink to &quot;Vscode中安装Flutter插件 Dart插件。&quot;">​</a></h3><p><img src="'+e+`" alt="image-20230521191642686"></p><h3 id="vscode中打开flutter项目进行开发" tabindex="-1">Vscode中打开flutter项目进行开发 <a class="header-anchor" href="#vscode中打开flutter项目进行开发" aria-label="Permalink to &quot;Vscode中打开flutter项目进行开发&quot;">​</a></h3><p>注意：定位到项目目录，不需要定位到项目目录对应的android目录</p><h3 id="运行flutter项目、热加载flutter项目" tabindex="-1">运行Flutter项目、热加载Flutter项目 <a class="header-anchor" href="#运行flutter项目、热加载flutter项目" aria-label="Permalink to &quot;运行Flutter项目、热加载Flutter项目&quot;">​</a></h3><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">flutter run</span></span>
<span class="line"><span style="color:#A6ACCD;">flutter run -d all</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">Flutter run key commands.</span></span>
<span class="line"><span style="color:#A6ACCD;">r Hot reload.</span></span>
<span class="line"><span style="color:#A6ACCD;">R Hot restart.</span></span>
<span class="line"><span style="color:#A6ACCD;">h List all available interactive commands.</span></span>
<span class="line"><span style="color:#A6ACCD;">d Detach (terminate &quot;flutter run&quot; but leave application running).</span></span>
<span class="line"><span style="color:#A6ACCD;">c Clear the screen</span></span>
<span class="line"><span style="color:#A6ACCD;">q Quit (terminate the application on the device).</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>常用的快捷键</p><p>r 键 ：点击后热加载，也就算是重新加载吧。</p><p>R键：热重启项目。</p><p>p 键：显示网格，这个可以很好的掌握布局情况，工作中很有用。</p><p>o 键：切换android和ios的预览模式。</p><p>q 键：退出调试预览模式。</p><p>查看设备</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">flutter devices</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>运行在所有的设备</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">flutter run -d all</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>指定设备运行</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">flutter run -d chrome</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="flutter中设置android的应用名称和图标" tabindex="-1">Flutter中设置Android的应用名称和图标 <a class="header-anchor" href="#flutter中设置android的应用名称和图标" aria-label="Permalink to &quot;Flutter中设置Android的应用名称和图标&quot;">​</a></h2><p><a href="http://www.hzhcontrols.com/new-1209816.html" target="_blank" rel="noreferrer">http://www.hzhcontrols.com/new-1209816.html</a></p><h2 id="flutter-android-studio打apk包" tabindex="-1">Flutter Android Studio打apk包 <a class="header-anchor" href="#flutter-android-studio打apk包" aria-label="Permalink to &quot;Flutter Android Studio打apk包&quot;">​</a></h2><blockquote><p>最新版的 Android Studio 没有Generate Signed Bundle/Apk，所以得自己生成签名</p><ol><li><p>打开命令行工具，进入JDK的bin目录（默认路径为 C:\\Program Files\\Java\\jdk\\bin）</p><blockquote><p>我的保存在 C:\\Users\\Administrator.android</p><p>SHA1: 25:24:07:57:23:16:F5:D8:8F:57:63:EC:0A:9D:35:E4:9E:DC:DE:A9</p><p>SHA256: 32:67:B9:43:B2:B7:53:C4:A9:1D:B7:AD:4E:33:8F:12:2F:97:60:ED:8E:02:78:96:56:D6:DD:17:C9:F7:C3:45</p></blockquote></li><li><p>输入以下命令创建Keystore文件：</p></li></ol><p>keytool -genkey -v -keystore myKeystore.keystore -alias myAlias -keyalg RSA -keysize 2048 -validity 10000</p><p>解释：</p><p>-genkey：指定要生成一个新的密钥对和自签名证书。</p><p>-v：指定详细输出，便于调试。</p><p>-keystore：指定要保存的Keystore文件名。</p><p>-alias：指定别名，用于标识密钥和证书。</p><p>-keyalg：指定密钥算法，这里使用RSA算法。</p><p>-keysize：指定密钥长度，这里设置为2048。</p><p>-validity：指定证书有效期，以天为单位。</p><ol start="3"><li><p>根据提示输入相关信息，如口令、姓名、单位、城市、省份、国家等。</p></li><li><p>执行命令后，Keystore文件将被保存在当前目录下。</p></li></ol></blockquote><p><a href="https://blog.csdn.net/m0_68349563/article/details/129760240" target="_blank" rel="noreferrer">https://blog.csdn.net/m0_68349563/article/details/129760240</a></p>`,29),o=[r];function p(i,d,c,u,h,b){return n(),s("div",null,o)}const y=a(l,[["render",p]]);export{C as __pageData,y as default};
