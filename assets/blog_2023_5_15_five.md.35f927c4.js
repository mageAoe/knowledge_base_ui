import{_ as s,c as n,o as a,O as o}from"./chunks/framework.41379913.js";const d=JSON.parse('{"title":"vue 项目中  jsconfig.json 概念 及 使用步骤","description":"","frontmatter":{},"headers":[],"relativePath":"blog/2023/5/15/five.md"}'),l={name:"blog/2023/5/15/five.md"},e=o(`<h1 id="vue-项目中-jsconfig-json-概念-及-使用步骤" tabindex="-1">vue 项目中 jsconfig.json 概念 及 使用步骤 <a class="header-anchor" href="#vue-项目中-jsconfig-json-概念-及-使用步骤" aria-label="Permalink to &quot;vue 项目中  jsconfig.json 概念 及 使用步骤&quot;">​</a></h1><h2 id="vue项目中-jsconfig-json概念及使用步骤" tabindex="-1">vue项目中 jsconfig.json概念及使用步骤 <a class="header-anchor" href="#vue项目中-jsconfig-json概念及使用步骤" aria-label="Permalink to &quot;vue项目中 jsconfig.json概念及使用步骤&quot;">​</a></h2><h3 id="vue项目中-jsconfig-json是什么" tabindex="-1">vue项目中 jsconfig.json是什么 <a class="header-anchor" href="#vue项目中-jsconfig-json是什么" aria-label="Permalink to &quot;vue项目中 jsconfig.json是什么&quot;">​</a></h3><blockquote><p>当您在工作空间中有一个定义项目上下文的jsconfig.json文件时，JavaScript体验会得到改进</p></blockquote><h3 id="概述" tabindex="-1">概述 <a class="header-anchor" href="#概述" aria-label="Permalink to &quot;概述&quot;">​</a></h3><p>目录中存在tsconfig.json文件表明该目录是 TypeScript 项目的根目录。该tsconfig.json文件指定编译项目所需的根文件和编译器选项。</p><p>JavaScript 项目可以使用jsconfig.json文件来代替，它的作用几乎相同，但默认启用了一些与 JavaScript 相关的编译器标志</p><h3 id="一、使用tsconfig-json或jsconfig-json" tabindex="-1">一、使用tsconfig.json或jsconfig.json <a class="header-anchor" href="#一、使用tsconfig-json或jsconfig-json" aria-label="Permalink to &quot;一、使用tsconfig.json或jsconfig.json&quot;">​</a></h3><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">jsconfig</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">json源于tsconfig</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">json，是TypeScript的配置文件。</span></span>
<span class="line"><span style="color:#A6ACCD;">jsconfig</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">json相当于tsconfig</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">json的“allowJs”属性设置为true</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="二、使用步骤" tabindex="-1">二、使用步骤 <a class="header-anchor" href="#二、使用步骤" aria-label="Permalink to &quot;二、使用步骤&quot;">​</a></h3><blockquote><ol><li>配置说明</li></ol></blockquote><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">compilerOptions</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">baseUrl</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">.</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">paths</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#676E95;font-style:italic;">// 解决项目中使用@作为路径别名，导致vscode无法跳转文件的问题</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F78C6C;">@/*</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">src/*</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;font-style:italic;">// 解决prettier对于装饰器语法的警告</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">experimentalDecorators</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">true,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;font-style:italic;">// 解决.jsx文件无法快速跳转的问题</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">jsx</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">preserve</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">//提高 IDE 性能</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">exclude</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">node_modules</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">dist</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">build</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>在这里特别说明一下 exclude 为什么 提高 编译器 性能 ？ 如果开发的项目根目录下没有 jsconfig.json，在默认情况下，像 VS Code， 默认只会把 node_modules文件夹排除掉。 <strong>官方给出建议是这样的</strong>：</p><blockquote><p>只要有可能，您应该使用不属于项目源代码的JavaScript文件排除文件夹</p></blockquote><p>意思就是 与开发无关的文件可以让 IDE 全部在编译时排除掉，像上面的配置中就排除了，构建过程依赖文件（node_modules）和生成的文件(dist 目录) 排除这些文件，可以提高 vscode 的性能</p><blockquote><ol start="2"><li>配置 webpack 别名 作为新手的你，是否遇到够这种情况：无数次的 …/ …/ …/ 早已让你眼花缭乱。</li></ol></blockquote><p>现在它来了，你需要配置paths ：</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">paths</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">@/*</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">src/*</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>用 @ 代替 项目中 src目录，我们在 src 目录下 找 components 就简单多了</p><blockquote><ol start="3"><li>compilerOptions配置</li></ol></blockquote><table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td>nolib</td><td>不要包含默认的库文件(lib.d.ts)</td></tr><tr><td>target</td><td>指定要使用的默认库(lib.d.ts)。值为 “es3”，&quot;es5&quot;&quot;es6&quot;&quot;es2015”&quot;es2016”，&quot;es2017”，&quot;es2018”，&quot;es2019&quot;，&quot;es2020”，&quot;esnext&quot;</td></tr><tr><td>module</td><td>在生成模块代码时指定模块系统。值为 ”amd”、”commonJS&quot;，”es2015&quot;，&quot;es6&quot;，”esnext&quot;，”none&quot;，&quot;system&quot;，&quot;umd&quot;</td></tr><tr><td>moduleResolution</td><td>指定如何解析导入模块。值为“node”和“classic&#39;</td></tr><tr><td>checkJs</td><td>启用 JavaScript 文件的类型检查</td></tr><tr><td>experimentalDecorators</td><td>为提议的 ES 装饰器提供实验支持</td></tr><tr><td>allowSyntheticDefaultlmports</td><td>允许从没有默认导出的模块进行默认导入。这不影响代码，只是进行类型检查</td></tr><tr><td>baseUr</td><td>指定模块基础目录</td></tr><tr><td>paths</td><td>指定相对于模块路径别名映射</td></tr></tbody></table>`,21),t=[e];function p(r,c,i,D,u,F){return a(),n("div",null,t)}const C=s(l,[["render",p]]);export{d as __pageData,C as default};
