import{_ as s,c as a,o as n,O as l}from"./chunks/framework.41379913.js";const C=JSON.parse('{"title":"ES5","description":"","frontmatter":{},"headers":[],"relativePath":"framework/javascript/es5.md"}'),e={name:"framework/javascript/es5.md"},p=l(`<h1 id="es5" tabindex="-1">ES5 <a class="header-anchor" href="#es5" aria-label="Permalink to &quot;ES5&quot;">​</a></h1><h2 id="replace" tabindex="-1">replace <a class="header-anchor" href="#replace" aria-label="Permalink to &quot;replace&quot;">​</a></h2><ul><li>接收两个参数</li></ul><p>​ a. 第一个参数可以是正则，可以是字符串</p><p>​ b. 第二个参数可以是要替换的字符串，也可以是 <strong>function</strong></p><ul><li>高级用法</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   * </span><span style="color:#89DDFF;font-style:italic;">@</span><span style="color:#C792EA;font-style:italic;">param</span><span style="color:#676E95;font-style:italic;"> </span><span style="color:#A6ACCD;font-style:italic;">rs</span><span style="color:#676E95;font-style:italic;">：匹配结果</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   * </span><span style="color:#89DDFF;font-style:italic;">@</span><span style="color:#C792EA;font-style:italic;">param</span><span style="color:#676E95;font-style:italic;"> </span><span style="color:#A6ACCD;font-style:italic;">$1</span><span style="color:#676E95;font-style:italic;">:第1个()提取结果</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   * </span><span style="color:#89DDFF;font-style:italic;">@</span><span style="color:#C792EA;font-style:italic;">param</span><span style="color:#676E95;font-style:italic;"> </span><span style="color:#A6ACCD;font-style:italic;">$2</span><span style="color:#676E95;font-style:italic;">:第2个()提取结果</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   * </span><span style="color:#89DDFF;font-style:italic;">@</span><span style="color:#C792EA;font-style:italic;">param</span><span style="color:#676E95;font-style:italic;"> </span><span style="color:#A6ACCD;font-style:italic;">offset</span><span style="color:#676E95;font-style:italic;">:匹配开始位置</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   * </span><span style="color:#89DDFF;font-style:italic;">@</span><span style="color:#C792EA;font-style:italic;">param</span><span style="color:#676E95;font-style:italic;"> </span><span style="color:#A6ACCD;font-style:italic;">source</span><span style="color:#676E95;font-style:italic;">：原始字符串</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   */</span></span>
<span class="line"><span style="color:#89DDFF;">this.</span><span style="color:#82AAFF;">replace</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">/(</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#C3E88D;">\\s</span><span style="color:#89DDFF;">+)|(</span><span style="color:#C3E88D;">\\s</span><span style="color:#89DDFF;">+</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">)/</span><span style="color:#F78C6C;">g</span><span style="color:#89DDFF;">,</span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">rs</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;font-style:italic;">$1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;font-style:italic;">$2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;font-style:italic;">offset</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;font-style:italic;">source</span><span style="color:#89DDFF;">){</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//arguments中的每个元素对应一个参数</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">arguments</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span><span style="color:#89DDFF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="math" tabindex="-1">MATH <a class="header-anchor" href="#math" aria-label="Permalink to &quot;MATH&quot;">​</a></h2><h3 id="math-ceil-向上取整" tabindex="-1">Math.ceil() 向上取整 <a class="header-anchor" href="#math-ceil-向上取整" aria-label="Permalink to &quot;Math.ceil() 向上取整&quot;">​</a></h3><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> num </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">123.4546</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ceil</span><span style="color:#A6ACCD;">(num) </span><span style="color:#676E95;font-style:italic;">//124</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="math-foolr-向下取整" tabindex="-1">Math.foolr() 向下取整 <a class="header-anchor" href="#math-foolr-向下取整" aria-label="Permalink to &quot;Math.foolr() 向下取整&quot;">​</a></h3><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">var num = 123.4546;</span></span>
<span class="line"><span style="color:#A6ACCD;">Math.foolr(num) //123</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="math-random-取随机数" tabindex="-1">Math.random() 取随机数 <a class="header-anchor" href="#math-random-取随机数" aria-label="Permalink to &quot;Math.random() 取随机数&quot;">​</a></h3><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">取 0-1 的 开区间数</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="number" tabindex="-1">Number <a class="header-anchor" href="#number" aria-label="Permalink to &quot;Number&quot;">​</a></h2><h3 id="tofixxed-保留两位有效数字" tabindex="-1">toFixxed 保留两位有效数字 <a class="header-anchor" href="#tofixxed-保留两位有效数字" aria-label="Permalink to &quot;toFixxed 保留两位有效数字&quot;">​</a></h3><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> num </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">12.3435343</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">num</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toFixed</span><span style="color:#A6ACCD;">() </span><span style="color:#676E95;font-style:italic;">//12</span></span>
<span class="line"><span style="color:#A6ACCD;">num</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toFixed</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// &#39;12.34&#39;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 可以用来补零</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> num1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">14</span></span>
<span class="line"><span style="color:#A6ACCD;">num1</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toFixed</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// &#39;14.00&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="事件处理模型" tabindex="-1">事件处理模型 <a class="header-anchor" href="#事件处理模型" aria-label="Permalink to &quot;事件处理模型&quot;">​</a></h2><ul><li>addEventListener(type,fn,false) <strong>false为事件冒泡，true为事件捕获</strong></li></ul><h3 id="事件冒泡" tabindex="-1">事件冒泡 <a class="header-anchor" href="#事件冒泡" aria-label="Permalink to &quot;事件冒泡&quot;">​</a></h3><blockquote><p>结构上嵌套关系的元素，会存在 冒泡的功能，即同一事件，自子元素向父元素（自底向上）</p></blockquote><ul><li>取消事件冒泡</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">ediv</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addEventListener</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">cilck</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">e</span><span style="color:#89DDFF;">){</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">e</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">stopPropagation</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#89DDFF;">},</span><span style="color:#FF9CAC;">false</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#FFCB6B;">ie独有</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">e</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">cancelBubble </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> 现在chorme也实现了</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li>取消事件的默认行为</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">默认事件 </span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">》 表单提交，a标签跳转，右键菜单</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">、</span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">false</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">、e</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">preventDefault</span><span style="color:#A6ACCD;">() </span><span style="color:#676E95;font-style:italic;">//ie9不兼容</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;">、e</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">returnValue </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//兼容ie</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">javascript:void()</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">可以取消默认事件</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">封装一个阻止默认事件兼容函数</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="事件捕获" tabindex="-1">事件捕获 <a class="header-anchor" href="#事件捕获" aria-label="Permalink to &quot;事件捕获&quot;">​</a></h3><blockquote><p>结构上嵌套关系的元素，会存在 捕获的功能，即同一事件，自父元素向子元素（自上向下）</p></blockquote><p>触发顺序，先捕获，后冒泡</p><ul><li>focus，blur，change，submit，reset，selec等事件不冒泡</li></ul><h2 id="数组" tabindex="-1">数组 <a class="header-anchor" href="#数组" aria-label="Permalink to &quot;数组&quot;">​</a></h2><h3 id="splice" tabindex="-1">splice <a class="header-anchor" href="#splice" aria-label="Permalink to &quot;splice&quot;">​</a></h3><blockquote><p>splice主要能实现原<a href="https://so.csdn.net/so/search?q=%E6%95%B0%E7%BB%84&amp;spm=1001.2101.3001.7020" target="_blank" rel="noreferrer">数组</a>的删除、替换，插入</p></blockquote><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> colors </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">red</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">blue</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">green</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">sykblue</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">colors</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">splice</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// 删除colors 中1、2两项, 返回被删除项 [&#39;blue&#39;, &#39;green&#39;]</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(colors) </span><span style="color:#676E95;font-style:italic;">// [&#39;red&#39;, &#39;sykblue&#39;]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">colors</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">splice</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">yellow</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">black</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// 插入&#39;yellow&#39;,&#39;black&#39; ， 返回被删除项[]</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(colors) </span><span style="color:#676E95;font-style:italic;">// [&#39;red&#39;, &#39;yellow&#39;, &#39;black&#39;, &#39;sykblue&#39;]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">colors</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">splice</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">white</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">teal</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// 替换 1、2元素 ， 返回被删除项 [&#39;yellow&#39;, &#39;black&#39;]</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(colors) </span><span style="color:#676E95;font-style:italic;">// [&#39;red&#39;, &#39;white&#39;, &#39;teal&#39;, &#39;sykblue&#39;]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="slice" tabindex="-1">slice <a class="header-anchor" href="#slice" aria-label="Permalink to &quot;slice&quot;">​</a></h3><blockquote><p>可以取出数组中的任意值，并返回一个新的数组</p><p>splice中的第二个参数代表个数</p><p>slice中的第二个参数代表元素的位置，但是只取出这个元素之前的值，不包含这个位置的值。</p></blockquote><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> colors </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">red</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">blue</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">green</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">sykblue</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">colors</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">slice</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// [&#39;blue&#39;]</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(colors) </span><span style="color:#676E95;font-style:italic;">// [&#39;red&#39;, &#39;blue&#39;, &#39;green&#39;, &#39;sykblue&#39;]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="事件" tabindex="-1">事件 <a class="header-anchor" href="#事件" aria-label="Permalink to &quot;事件&quot;">​</a></h2><p>@mouseenter、@mousedown等鼠标事件[非鼠标点击事件]时，发现事件不触发，失效了</p><p>此时应该在@mouseenter、@mouseenter等鼠标事件加上<a href="https://so.csdn.net/so/search?q=native&amp;spm=1001.2101.3001.7020" target="_blank" rel="noreferrer">native</a>属性就好了</p><p>你可能有很多次想要在一个组件的根元素上直接监听一个原生事件。这时，你可以使用 <code>v-on</code> 的 <code>.native</code> 修饰符</p><div class="language-vue line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">base-input</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">v-on</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">focus</span><span style="color:#A6ACCD;">.</span><span style="color:#C792EA;">native</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">onFocus</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">base-input</span><span style="color:#89DDFF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>mousedown</li></ul><p>当鼠标指针移动到元素上方，并按下鼠标按键（左、右键均可）时，会发生 mousedown 事件。 与 click 事件不同，mousedown 事件仅需要按键被按下，而不需要松开即可发生。</p><ul><li>mouseup</li></ul><p>当在元素上松开鼠标按键（左、右键均可）时，会发生 mouseup 事件。 与 click 事件不同，mouseup 事件仅需要松开按钮。当鼠标指针位于元素上方时，放松鼠标按钮就会触发该事件。</p><ul><li>click</li></ul><p>当鼠标指针停留在元素上方，然后按下并松开鼠标左键时，就会发生一次 click 事件。 注意：触发click事件的条件是按下并松开鼠标左键！，按下并松开鼠标右键并不会触发click事件。</p><h3 id="针对我们的手机h5-提供了手指触摸等事件" tabindex="-1">针对我们的手机H5，提供了手指触摸等事件 <a class="header-anchor" href="#针对我们的手机h5-提供了手指触摸等事件" aria-label="Permalink to &quot;针对我们的手机H5，提供了手指触摸等事件&quot;">​</a></h3><table><thead><tr><th>事件</th><th>描述</th></tr></thead><tbody><tr><td>touchstart</td><td>当手指触摸屏幕时候触发，即使已经有一个手指放在屏幕上也会触发。</td></tr><tr><td>touchmove</td><td>当手指在屏幕上滑动的时候连续地触发。在这个事件发生期间，调用preventDefault()事件可以阻止滚动。</td></tr><tr><td>touchend</td><td>当手指从屏幕上离开的时候触发。</td></tr></tbody></table><p><strong>跟踪触摸的属性</strong></p><table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td>touches</td><td>表示当前跟踪的触摸操作的touch对象的数组。</td></tr><tr><td>targetTouches</td><td>特定于事件目标的Touch对象的数组</td></tr><tr><td>changeTouches</td><td>表示自上次触摸以来发生了什么改变的Touch对象的数组。</td></tr><tr><td><strong>每个Touch对象包含的属性如下</strong></td><td></td></tr><tr><td>属性</td><td>描述</td></tr><tr><td>:----:</td><td>:----:</td></tr><tr><td>clientX</td><td>触摸目标在视口中的x坐标。</td></tr><tr><td>clientY</td><td>触摸目标在视口中的y坐标。</td></tr><tr><td>identifier</td><td>标识触摸的唯一ID。</td></tr><tr><td>pageX</td><td>触摸目标在页面中的x坐标。</td></tr><tr><td>pageY</td><td>触摸目标在页面中的y坐标。</td></tr><tr><td>screenX</td><td>触摸目标在屏幕中的x坐标。</td></tr><tr><td>screenY</td><td>触摸目标在屏幕中的y坐标。</td></tr><tr><td>target</td><td>触目的DOM节点目标。</td></tr></tbody></table>`,51),o=[p];function t(r,c,i,y,D,F){return n(),a("div",null,o)}const u=s(e,[["render",t]]);export{C as __pageData,u as default};
